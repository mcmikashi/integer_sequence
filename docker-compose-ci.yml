version: "3.9"
services:
  db:
    container_name: db
    image: postgres:alpine
    networks:
      - sequencenetwork
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 15s
      timeout: 15s
      retries: 5
      start_period: 30s
  redis-server:
    image: redis:alpine
  back-app:
    build:
      context: .
      dockerfile: ./docker/dev/Dockerfile.back
    ports:
      - "8000:8000"
    depends_on:
      - redis-server
      - db
    links:
      - redis-server
      - db:db
    networks:
      - sequencenetwork
    env_file:
      - back.env
  front-app:
    container_name: frontend
    build:
      context: .
      dockerfile: ./docker/dev/Dockerfile.front
    ports:
      - "5000:5173"
    volumes:
      - ./front:/app
      - /app/node_modules
    depends_on:
      - redis-server
    links:
      - redis-server

networks:
    sequencenetwork:
        driver: bridge
